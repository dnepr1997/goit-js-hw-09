{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAoBA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACeC,KAAKC,SAAW,GAGlCJ,EAAQK,EAAAX,GAASY,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,QAE5EG,EAAKI,EAAAX,GAASY,OAAOG,QAAQ,sBAAqCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAG/EA,E,IA7BEY,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GAClBA,EAAMC,iBAEN,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CnB,EAAwBiB,EAAxBjB,MAAOoB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAErBjB,YAAW,WACP,IAAI,IAAIkB,EAAI,EAAGA,IAAMD,EAAOE,MAAOD,IAC/BxB,EAAcwB,EAAIF,EAAKG,MAAQD,GAC1BE,MAAK,SAAAC,G,OAAQC,QAAQC,IAAIF,E,IACzBG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,OAEpC7B,EAAMuB,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n    event.preventDefault();\n\n    const { delay, step, amount } = event.currentTarget.elements;\n\n    setTimeout(() => {\n        for(let i = 1; i <= +amount.value; i++) {\n            createPromise(i, (step.value * i))\n                .then(data => console.log(data))\n                .catch(error => console.log(error))\n        }\n    }, +delay.value)\n}\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const shouldResolve = Math.random() > 0.3;\n            if (shouldResolve) {\n                // Fulfill\n                resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n              } else {\n                reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n                // Reject\n              }\n        }, delay)\n    })\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","i","value","then","data","console","log","catch","error"],"version":3,"file":"03-promises.ba682abb.js.map"}