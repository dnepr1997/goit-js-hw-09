{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SACxBD,SAASC,cAAc,UAyBnC,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACHH,EACAF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAEhCA,EAAM,G,CAhCjBL,EAAKa,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBACJ,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SACpD,IAAIC,GAAaL,EAAMM,MACnBC,GAAYN,EAAKK,MACjBE,GAAcN,EAAOI,MAGzB,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,IAE7BtB,EAAcsB,EAAGJ,GACfK,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACvBsB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAEjEgB,GAAYE,EAEhBvB,EAAKgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form')\nconst btn = document.querySelector('button')\n\nform.addEventListener('submit', hendleForn)\n\nfunction hendleForn(event) {\n  event.preventDefault()\n    const { delay, step, amount } = event.currentTarget.elements\n    let newDelay = +(delay.value)\n    let newStep = +(step.value)\n    let newAmount = +(amount.value)\n    \n    \n    for (let i = 1; i <= newAmount; i++) {\n        \n       createPromise(i, newDelay) \n        .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n        newDelay += newStep\n    }\n    form.reset()\n}\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay })\n  } else {\n                reject({ position, delay })\n  }\n        }, delay)\n    })\n}\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","newDelay","value","newStep","newAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.bb83291a.js.map"}